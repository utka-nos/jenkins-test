apiVersion: v1
kind: ServiceAccount
metadata:
  name: nginx-ingress-sa
  namespace: test-namespace

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-manifest
  namespace: test-namespace
spec:
  rules:
    - host: sender.ru
      http:
        paths:
          - path: /sender
            pathType: Prefix
            backend:
              service:
                name: sender-service
                port:
                  number: 8082
    - host: receiver.ru
      http:
        paths:
          - path: /receiver
            pathType: Prefix
            backend:
              service:
                name: receiver-service
                port:
                  number: 8081
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: test-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app : nginx-pod
  template:
    metadata:
      labels:
        app : nginx-pod
    spec:
      containers:
        - image: nginx/nginx-ingress:2.4.0
          imagePullPolicy: IfNotPresent
          name: nginx-container
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
            - name: readiness-port
              containerPort: 8081
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: nginx-ingress-cluster-role
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - update
      - create
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
      - list
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - update
      - create
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - list
      - watch
      - get
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
      - get
  - apiGroups:
      - k8s.nginx.org
    resources:
      - virtualservers
      - virtualserverroutes
      - globalconfigurations
      - transportservers
      - policies
    verbs:
      - list
      - watch
      - get
  - apiGroups:
      - k8s.nginx.org
    resources:
      - virtualservers/status
      - virtualserverroutes/status
      - policies/status
      - transportservers/status
      - dnsendpoints/status
    verbs:
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingressclasses
    verbs:
      - get
      - update
  - apiGroups:
      - cis.f5.com
    resources:
      - ingresslinks
    verbs:
      - list
      - watch
      - get
  - apiGroups:
      - cert-manager.io
    resources:
      - certificates
    verbs:
      - list
      - watch
      - get
      - update
      - create
      - delete
  - apiGroups:
      - externaldns.nginx.org
    resources:
      - dnsendpoints
    verbs:
      - list
      - watch
      - get
      - update
      - create
      - delete
  - apiGroups:
      - externaldns.nginx.org
    resources:
      - dnsendpoints/status
    verbs:
      - update

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: nginx-ingress-crb
subjects:
  - kind: ServiceAccount
    name: nginx-ingress-sa
    namespace: test-namespace
roleRef:
  kind: ClusterRole
  name: nginx-ingress-cluster-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: nginx-ingress-class
  # annotations:
  #   ingressclass.kubernetes.io/is-default-class: "true"
spec:
  controller: nginx.org/ingress-controller













